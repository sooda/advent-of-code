#ip 4
 raw:             C-like:             r4 is IP:                     changes in IP to explicit jumps
 0  addi 4 16 4   0  r4 += 16         0  IP += 16                   0  jmp 17 ----------------------v              f() {                                   f() {
 1  seti 1 7 1    1  r1 = 1           1  r1 = 1                     1  r1 = 1                       v      <` <`     r1 = 1;        // L1                    r1 = 1;        // L1
 2  seti 1 8 2    2  r2 = 1           2  r2 = 1                     2  r2 = 1                  <`   v       ^  ^     r2 = 1;        // L2                    r2 = 1;        // L2
 3  mulr 1 2 3    3  r3 = r1 * r2     3  r3 = r1 * r2               3  r3 = r1 * r2       <^    ^   v       ^  ^     r3 = r1 * r2;  // L3                    r3 = r1 * r2;  // L3
 4  eqrr 3 5 3    4  r3 = r3 == r5    4  r3 = r3 == r5              4  r3 = r5 == 1        ^    ^   v       ^  ^     if r5 == r3 {  // L4-L5                 if r5 == r3 {  // L4-L5
 5  addr 3 4 4    5  r4 += r3         5  IP += r3       [r5==1] ´<  5  jeq 7               ^    ^   v       ^  ^       r0 += r1;    // L7                      r0 += r1;    // L7
 6  addi 4 1 4    6  r4 += 1          6  IP += 1                v   6  jmp 8          -v   ^    ^   v       ^  ^     }              // L6                    }              // L6
 7  addr 1 0 0    7  r0 += r1         7  r0 += r1               `>  7  r0 += r1        v   ^    ^   v       ^  ^     r2 += 1;       // L8                    r2 += 1;       // L8
 8  addi 2 1 2    8  r2 += 1          8  r2 += 1                    8  r2 += 1        <´   ^    ^   v       ^  ^     if r2 > r5 {   // L9-L10                if r2 > r5 {   // L9-L10
 9  gtrr 2 5 3    9  r3 = r2 > r5     9  r3 = r2 > r5               9  r3 = r2 > r5        ^    ^   v       ^  ^       r1 += 1;     // L12                     r1 += 1;     // L12
10  addr 4 3 4   10  r4 += r3        10  IP += r3       [r2>r5] ´< 10  jg 12               ^    ^   v       ^  ^       if r1 > r5 { // L13-L14                 if r1 > r5 { // L13-L14
11  seti 2 1 4   11  r4 = 2          11  IP = 2                 v  11  jmp 3 --------------^    ^   v       ^  ^         exit;      // L16                       exit;      // L16
12  addi 1 1 1   12  r1 += 1         12  r1 += 1                `> 12  r1 += 1                  ^   v       ^  ^       }            // L15                     }            // L15
13  gtrr 1 5 3   13  r3 = r1 > r5    13  r3 = r1 > r5              13  r3 = r1 > r5             ^   v       ^  ^       goto 2       // L15  r2=1, goto 3       r2 = 1;      // L2
14  addr 3 4 4   14  r4 += r3        14  IP += r3       [r1>r5] `< 14  jg 16                    ^   v       ^  ^     }              // L11                     goto 3       // L15-L2
15  seti 1 8 4   15  r4 = 1          15  IP = 1                 v  15  jmp 2  ------------------^   v       ^  ^     goto 3         // L11                   }              // L11
16  mulr 4 4 4   16  r4 *= r4        16  IP *= IP               `> 16  ret                          v       ^  ^   }                                         goto 3         // L11
17  addi 5 2 5   17  r5 += 2         17  r5 += 2                   17  r5 += 2                     <´       ^  ^                                           }
18  mulr 5 5 5   18  r5 *= r5        18  r5 *= r5                  18  r5 *= r5                             ^  ^   a() {
19  mulr 4 5 5   19  r5 *= r4        19  r5 *= IP                  19  r5 *= 19                             ^  ^     r5 = (r5+2) * (r5+2) * 209; // 4*209 = 836
20  muli 5 11 5  20  r5 *= 11        20  r5 *= 11                  20  r5 *= 11 r5=(r5+2) * (r5+2) * 209    ^  ^     r3 = (r3+4) * 22 + 21;      // 4 * 22 + 21 = 109
21  addi 3 4 3   21  r3 += 4         21  r3 += 4                   21  r3 += 4                              ^  ^     r5 += r3;                   // 945
22  mulr 3 4 3   22  r3 *= r4        22  r3 *= IP                  22  r3 *= 22                             ^  ^     if (r0 != 1) {
23  addi 3 21 3  23  r3 += 21        23  r3 += 21                  23  r3 += 21 r3=(r3+4) * 22 + 21         ^  ^       f();
24  addr 5 3 5   24  r5 += r3        24  r5 += r3                  24  r5 += r3                             ^  ^     }
25  addr 4 0 4   25  r4 += r0        25  IP += r0        [r0=1] ´< 25  IP += r0                             ^  ^     r3 = 10550400;
26  seti 0 5 4   26  r4 = 0          26  IP = 0                 v  26  jmp 1  ------------------------------´  ^     r5 += 10550400;             // 10551345
27  setr 4 1 3   27  r3 = r4         27  r3 = IP                `> 27  r3 = 27                                 ^     r0 = 0;
28  mulr 3 4 3   28  r3 *= r4        28  r3 *= IP                  28  r3 *= 28 (756)                          ^     f();
29  addr 4 3 3   29  r3 += r4        29  r3 += IP                  29  r3 += 29 (785)                          ^   }
30  mulr 4 3 3   30  r3 *= r4        30  r3 *= IP                  30  r3 *= 30 (23550)                        ^   main() {
31  muli 3 14 3  31  r3 *= 14        31  r3 *= 14                  31  r3 *= 14 (329700)                       ^     r0 = 1;
32  mulr 3 4 3   32  r3 *= r4        32  r3 *= IP                  32  r3 *= 32 (10550400)                     ^     a();
33  addr 5 3 5   33  r5 += r3        33  r5 += r3                  33  r5 += r3                                ^   }
34  seti 0 2 0   34  r0 = 0          34  r0 = 0                    34  r0 = 0                                  ^
35  seti 0 0 4   35  r4 = 0          35  IP = 0                    35  jmp 1 ----------------------------------´
